#include <iostream> //с заходом : Отладчик заходит в используемые программой функции (библиотечные, функции пользо-вателя и т.п.
#include <stdio.h>
#include <cmath> /*Процесс отладки программы состоит из многократных попыток выполнения программы на компьютере,
					анализа полу-чившихся результатов и исправления ошибок.
					Отладка позволяет обнаружить ошибки, которые появляются во время выпол-нения программы,
					т. е. выявить ситуации, при которых программа работает, но вычисляет значения неправильно.*/
using namespace std;

int main()
{
	system("color 5F");
	setlocale(LC_CTYPE, "Russian");
	float y,x, a, z;
	y = 2.7;
	a = -5.5E-4;
	float j[4] = {6, -8.2, 15.4, 2};
	int size = sizeof(j) / sizeof(j[0]); /*Находим длину массива.
										 Применяем оператор sizeof.
										 Длина массива равна совокупной длине его элементов.
										 Поэтому с помощью выражения sizeof(numbers) находим длину всего массива в байтах,
										 а с помощью выражения sizeof(numbers[0]) - длину одного элемента в байтах.
										 Разделив два значения, можно получить количество элементов в массиве. */

	for (int i = 0; i < size; i++)
	{
		x = pow(cos(y), 2) / j[i] + (2 * a * y);
		if (x >= sqrt(y)) {
			z = exp(-j[i]);
		}
		if (x < sqrt(y)) {
			z = pow(0.5 * y / j[i], 2);
		}
		else z = 0;

		cout << "\nВариант" << i << endl;
		cout << "\nX =" << x << endl;
		cout << "Z =" <<z<< endl << endl;
	}
	return 0;
}